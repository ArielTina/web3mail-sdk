# sdk @iexec/web3mail default pipeline
kind: pipeline
type: docker
name: sdk-default

trigger:
  event:
    exclude:
      - promote

steps:
  - name: install
    image: node:18
    pull: always
    commands:
      - node -v
      - npm -v
      - npm ci

  - name: format
    image: node:18
    pull: always
    commands:
      - npm run check-format

  - name: test
    image: node:18
    pull: always
    commands:
      - npm run test

  - name: build
    image: node:18
    pull: always
    commands:
      - npm run build

---
# sdk @iexec/web3mail publish npm nightly pipeline
kind: pipeline
type: docker
name: sdk-publish-nightly

trigger:
  event:
    - promote
  target:
    - nightly

steps:
  - name: install
    image: node:18
    pull: always
    commands:
      - node -v
      - npm -v
      - npm ci

  - name: format
    image: node:18
    pull: always
    commands:
      - npm run check-format

  - name: test
    image: node:18
    pull: always
    commands:
      - npm run test

  - name: build
    image: node:18
    pull: always
    commands:
      - npm run build

  - name: set-version-nightly
    image: node:18
    pull: always
    commands:
      - eval npm pkg set version="$(npm pkg get version)-nightly-$DRONE_COMMIT"

  - name: publish-dry-run
    image: node:18
    pull: always
    commands:
      - npm publish --tag nightly --dry-run

  - name: publish
    image: plugins/npm
    settings:
      username:
        from_secret: npm_username
      token:
        from_secret: npm_token
      tag: nightly
      access: public
    when:
      branch:
        - develop

---
# sdk @iexec/web3mail publish npm latest pipeline
kind: pipeline
type: docker
name: sdk-publish-latest

trigger:
  event:
    - promote
  target:
    - latest

steps:
  - name: install
    image: node:18
    pull: always
    commands:
      - node -v
      - npm -v
      - npm ci

  - name: format
    image: node:18
    pull: always
    commands:
      - npm run check-format

  - name: test
    image: node:18
    pull: always
    commands:
      - npm run test

  - name: build
    image: node:18
    pull: always
    commands:
      - npm run build

  - name: publish-dry-run
    image: node:18
    pull: always
    commands:
      - npm publish --dry-run

  - name: publish
    image: plugins/npm
    settings:
      username:
        from_secret: npm_username
      token:
        from_secret: npm_token
      tag: latest
      access: public
    when:
      branch:
        - main

---
# dapp web3mail-dapp default pipeline
# /!\ every step must run in dapp/
kind: pipeline
type: docker
name: dapp-default

trigger:
  event:
    exclude:
      - promote

steps:

  # TODO: here we want to run the tests

  - name: docker-dry-run
    # plugin doc https://plugins.drone.io/plugins/docker and repo https://github.com/drone-plugins/drone-docker
    image: plugins/docker
    pull: always
    settings:
      dry_run: true
      context: ./dapp
      dockerfile: ./dapp/Dockerfile
      registry: docker-regis.iex.ec
      repo: product/web3mail-dapp
      pull_image: true
      username:
        from_secret: nexus-user
      password:
        from_secret: nexus-password

---
# dapp web3mail-dapp publish docker dev non-tee pipeline
# /!\ every step must run in dapp/
kind: pipeline
type: docker
name: dapp-dev-non-tee

trigger:
  event:
    - promote
  target:
    - dapp-dev

  # TODO: here we want to run the tests

  - name: docker-publish-dev-non-tee
    # plugin doc https://plugins.drone.io/plugins/docker and repo https://github.com/drone-plugins/drone-docker
    image: plugins/docker
    pull: always
    settings:
      context: ./dapp
      dockerfile: ./dapp/Dockerfile
      registry: docker-regis.iex.ec
      repo: product/web3mail-dapp
      pull_image: true
      username:
        from_secret: nexus-user
      password:
        from_secret: nexus-password
      tags:
        - dev-non-tee
        - 'dev-non-tee-${DRONE_COMMIT}'
    when:
      branch:
        - develop